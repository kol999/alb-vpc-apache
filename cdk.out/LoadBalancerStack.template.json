{
  "Resources": {
    "DemoVPC2409DB3F": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "LoadBalancerStack/DemoVPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/Resource"
      }
    },
    "DemoVPCPublicSubnet1SubnetB6592B34": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "DemoVPC2409DB3F"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "LoadBalancerStack/DemoVPC/PublicSubnet1"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/PublicSubnet1/Subnet"
      }
    },
    "DemoVPCPublicSubnet1RouteTable833A1DC8": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "DemoVPC2409DB3F"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LoadBalancerStack/DemoVPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/PublicSubnet1/RouteTable"
      }
    },
    "DemoVPCPublicSubnet1RouteTableAssociationC64BEC15": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoVPCPublicSubnet1RouteTable833A1DC8"
        },
        "SubnetId": {
          "Ref": "DemoVPCPublicSubnet1SubnetB6592B34"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/PublicSubnet1/RouteTableAssociation"
      }
    },
    "DemoVPCPublicSubnet1DefaultRoute22933307": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoVPCPublicSubnet1RouteTable833A1DC8"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "DemoVPCIGWD7695CC8"
        }
      },
      "DependsOn": [
        "DemoVPCVPCGW5132360C"
      ],
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/PublicSubnet1/DefaultRoute"
      }
    },
    "DemoVPCPublicSubnet1EIPFF4AD3A2": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "LoadBalancerStack/DemoVPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/PublicSubnet1/EIP"
      }
    },
    "DemoVPCPublicSubnet1NATGateway301A7B38": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "DemoVPCPublicSubnet1EIPFF4AD3A2",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "DemoVPCPublicSubnet1SubnetB6592B34"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LoadBalancerStack/DemoVPC/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/PublicSubnet1/NATGateway"
      }
    },
    "DemoVPCPublicSubnet2Subnet980625E0": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "DemoVPC2409DB3F"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": "LoadBalancerStack/DemoVPC/PublicSubnet2"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/PublicSubnet2/Subnet"
      }
    },
    "DemoVPCPublicSubnet2RouteTableA55BFCCD": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "DemoVPC2409DB3F"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LoadBalancerStack/DemoVPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/PublicSubnet2/RouteTable"
      }
    },
    "DemoVPCPublicSubnet2RouteTableAssociationE7A0B7A1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoVPCPublicSubnet2RouteTableA55BFCCD"
        },
        "SubnetId": {
          "Ref": "DemoVPCPublicSubnet2Subnet980625E0"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/PublicSubnet2/RouteTableAssociation"
      }
    },
    "DemoVPCPublicSubnet2DefaultRoute30D76A52": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoVPCPublicSubnet2RouteTableA55BFCCD"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "DemoVPCIGWD7695CC8"
        }
      },
      "DependsOn": [
        "DemoVPCVPCGW5132360C"
      ],
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/PublicSubnet2/DefaultRoute"
      }
    },
    "DemoVPCPublicSubnet2EIP03E095AC": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "LoadBalancerStack/DemoVPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/PublicSubnet2/EIP"
      }
    },
    "DemoVPCPublicSubnet2NATGatewayA2C150AC": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "DemoVPCPublicSubnet2EIP03E095AC",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "DemoVPCPublicSubnet2Subnet980625E0"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LoadBalancerStack/DemoVPC/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/PublicSubnet2/NATGateway"
      }
    },
    "DemoVPCPrivateSubnet1Subnet577398CC": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "DemoVPC2409DB3F"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "LoadBalancerStack/DemoVPC/PrivateSubnet1"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/PrivateSubnet1/Subnet"
      }
    },
    "DemoVPCPrivateSubnet1RouteTable12D271CE": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "DemoVPC2409DB3F"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LoadBalancerStack/DemoVPC/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/PrivateSubnet1/RouteTable"
      }
    },
    "DemoVPCPrivateSubnet1RouteTableAssociationFD4C440A": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoVPCPrivateSubnet1RouteTable12D271CE"
        },
        "SubnetId": {
          "Ref": "DemoVPCPrivateSubnet1Subnet577398CC"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "DemoVPCPrivateSubnet1DefaultRouteA9EB711D": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoVPCPrivateSubnet1RouteTable12D271CE"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "DemoVPCPublicSubnet1NATGateway301A7B38"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/PrivateSubnet1/DefaultRoute"
      }
    },
    "DemoVPCPrivateSubnet2SubnetBF71F3B1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.192.0/18",
        "VpcId": {
          "Ref": "DemoVPC2409DB3F"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "Name",
            "Value": "LoadBalancerStack/DemoVPC/PrivateSubnet2"
          },
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/PrivateSubnet2/Subnet"
      }
    },
    "DemoVPCPrivateSubnet2RouteTable700990FB": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "DemoVPC2409DB3F"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LoadBalancerStack/DemoVPC/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/PrivateSubnet2/RouteTable"
      }
    },
    "DemoVPCPrivateSubnet2RouteTableAssociationB6F32155": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoVPCPrivateSubnet2RouteTable700990FB"
        },
        "SubnetId": {
          "Ref": "DemoVPCPrivateSubnet2SubnetBF71F3B1"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "DemoVPCPrivateSubnet2DefaultRoute92C2830D": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoVPCPrivateSubnet2RouteTable700990FB"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "DemoVPCPublicSubnet2NATGatewayA2C150AC"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/PrivateSubnet2/DefaultRoute"
      }
    },
    "DemoVPCIGWD7695CC8": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "LoadBalancerStack/DemoVPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/IGW"
      }
    },
    "DemoVPCVPCGW5132360C": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "DemoVPC2409DB3F"
        },
        "InternetGatewayId": {
          "Ref": "DemoVPCIGWD7695CC8"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/DemoVPC/VPCGW"
      }
    },
    "ASGBlueInstanceSecurityGroup69CAB15D": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "LoadBalancerStack/ASG-Blue/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "LoadBalancerStack/ASG-Blue"
          }
        ],
        "VpcId": {
          "Ref": "DemoVPC2409DB3F"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/ASG-Blue/InstanceSecurityGroup/Resource"
      }
    },
    "ASGBlueInstanceSecurityGroupfromLoadBalancerStackLBSecurityGroupB71A4BA880C21125CE": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "FromPort": 80,
        "GroupId": {
          "Fn::GetAtt": [
            "ASGBlueInstanceSecurityGroup69CAB15D",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "LBSecurityGroup8A41EA2B",
            "GroupId"
          ]
        },
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/ASG-Blue/InstanceSecurityGroup/from LoadBalancerStackLBSecurityGroupB71A4BA8:80"
      }
    },
    "ASGBlueInstanceRoleE148582E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LoadBalancerStack/ASG-Blue"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/ASG-Blue/InstanceRole/Resource"
      }
    },
    "ASGBlueInstanceProfile1AD78044": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "ASGBlueInstanceRoleE148582E"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/ASG-Blue/InstanceProfile"
      }
    },
    "ASGBlueLaunchConfig9A9C72A3": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t2.micro",
        "IamInstanceProfile": {
          "Ref": "ASGBlueInstanceProfile1AD78044"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ASGBlueInstanceSecurityGroup69CAB15D",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash\n#!/bin/sh\n\n#install httpd\nyum install httpd -y\n\n#enable and start httpd\nsystemctl enable httpd\nsystemctl start httpd\n\n/bin/cat >index.html <<EOL\n<html>\n    <body bgcolor=\"blue\">\n        <div align=\"center\">\n            <h1>Welcome to AWS!</h1>\n            <h4>Hostname: $(hostname -f)</h4>\n        </div>\n    </body>\n</html>\nEOL"
        }
      },
      "DependsOn": [
        "ASGBlueInstanceRoleE148582E"
      ],
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/ASG-Blue/LaunchConfig"
      }
    },
    "ASGBlueASG5B13DC1A": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "1",
        "MinSize": "1",
        "LaunchConfigurationName": {
          "Ref": "ASGBlueLaunchConfig9A9C72A3"
        },
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "LoadBalancerStack/ASG-Blue"
          }
        ],
        "TargetGroupARNs": [
          {
            "Ref": "LBListenerTargetGroupF04FCF6D"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "DemoVPCPrivateSubnet1Subnet577398CC"
          },
          {
            "Ref": "DemoVPCPrivateSubnet2SubnetBF71F3B1"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/ASG-Blue/ASG"
      }
    },
    "ASGBlueScalingPolicyAModestLoad3CB1FE8A": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AutoScalingGroupName": {
          "Ref": "ASGBlueASG5B13DC1A"
        },
        "PolicyType": "TargetTrackingScaling",
        "TargetTrackingConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "ALBRequestCountPerTarget",
            "ResourceLabel": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "LBListener49E825B4"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::Select": [
                      2,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "LBListener49E825B4"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::Select": [
                      3,
                      {
                        "Fn::Split": [
                          "/",
                          {
                            "Ref": "LBListener49E825B4"
                          }
                        ]
                      }
                    ]
                  },
                  "/",
                  {
                    "Fn::GetAtt": [
                      "LBListenerTargetGroupF04FCF6D",
                      "TargetGroupFullName"
                    ]
                  }
                ]
              ]
            }
          },
          "TargetValue": 1
        }
      },
      "DependsOn": [
        "LBListener49E825B4",
        "LBListenerTargetGroupF04FCF6D"
      ],
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/ASG-Blue/ScalingPolicyAModestLoad/Resource"
      }
    },
    "ASGGreenInstanceSecurityGroup652485A8": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "LoadBalancerStack/ASG-Green/InstanceSecurityGroup",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "LoadBalancerStack/ASG-Green"
          }
        ],
        "VpcId": {
          "Ref": "DemoVPC2409DB3F"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/ASG-Green/InstanceSecurityGroup/Resource"
      }
    },
    "ASGGreenInstanceRoleB9A77BE1": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "LoadBalancerStack/ASG-Green"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/ASG-Green/InstanceRole/Resource"
      }
    },
    "ASGGreenInstanceProfile0DE96C54": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [
          {
            "Ref": "ASGGreenInstanceRoleB9A77BE1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/ASG-Green/InstanceProfile"
      }
    },
    "ASGGreenLaunchConfig46323EE1": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
        },
        "InstanceType": "t2.micro",
        "IamInstanceProfile": {
          "Ref": "ASGGreenInstanceProfile0DE96C54"
        },
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "ASGGreenInstanceSecurityGroup652485A8",
              "GroupId"
            ]
          }
        ],
        "UserData": {
          "Fn::Base64": "#!/bin/bash\n#!/bin/sh\n\n#install httpd\nyum install httpd -y\n\n#enable and start httpd\nsystemctl enable httpd\nsystemctl start httpd\n\n/bin/cat >index.html <<EOL\n<html>\n    <body bgcolor=\"green\">\n        <div align=\"center\">\n            <h1>Welcome to AWS!</h1>\n            <h4>Hostname: $(hostname -f)</h4>\n        </div>\n    </body>\n</html>\nEOL"
        }
      },
      "DependsOn": [
        "ASGGreenInstanceRoleB9A77BE1"
      ],
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/ASG-Green/LaunchConfig"
      }
    },
    "ASGGreenASG8B5DDD5F": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "MaxSize": "1",
        "MinSize": "1",
        "LaunchConfigurationName": {
          "Ref": "ASGGreenLaunchConfig46323EE1"
        },
        "Tags": [
          {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "LoadBalancerStack/ASG-Green"
          }
        ],
        "VPCZoneIdentifier": [
          {
            "Ref": "DemoVPCPrivateSubnet1Subnet577398CC"
          },
          {
            "Ref": "DemoVPCPrivateSubnet2SubnetBF71F3B1"
          }
        ]
      },
      "UpdatePolicy": {
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": true
        }
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/ASG-Green/ASG"
      }
    },
    "LB8A12904C": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Scheme": "internet-facing",
        "SecurityGroups": [
          {
            "Fn::GetAtt": [
              "LBSecurityGroup8A41EA2B",
              "GroupId"
            ]
          }
        ],
        "Subnets": [
          {
            "Ref": "DemoVPCPublicSubnet1SubnetB6592B34"
          },
          {
            "Ref": "DemoVPCPublicSubnet2Subnet980625E0"
          }
        ],
        "Type": "application"
      },
      "DependsOn": [
        "DemoVPCPublicSubnet1DefaultRoute22933307",
        "DemoVPCPublicSubnet2DefaultRoute30D76A52"
      ],
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/LB/Resource"
      }
    },
    "LBSecurityGroup8A41EA2B": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Automatically created Security Group for ELB LoadBalancerStackLBBC778B9A",
        "SecurityGroupIngress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow from anyone on port 80",
            "FromPort": 80,
            "IpProtocol": "tcp",
            "ToPort": 80
          }
        ],
        "VpcId": {
          "Ref": "DemoVPC2409DB3F"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/LB/SecurityGroup/Resource"
      }
    },
    "LBSecurityGrouptoLoadBalancerStackASGBlueInstanceSecurityGroupA7D8941D804C82EB16": {
      "Type": "AWS::EC2::SecurityGroupEgress",
      "Properties": {
        "GroupId": {
          "Fn::GetAtt": [
            "LBSecurityGroup8A41EA2B",
            "GroupId"
          ]
        },
        "IpProtocol": "tcp",
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": {
          "Fn::GetAtt": [
            "ASGBlueInstanceSecurityGroup69CAB15D",
            "GroupId"
          ]
        },
        "FromPort": 80,
        "ToPort": 80
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/LB/SecurityGroup/to LoadBalancerStackASGBlueInstanceSecurityGroupA7D8941D:80"
      }
    },
    "LBListener49E825B4": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "TargetGroupArn": {
              "Ref": "LBListenerTargetGroupF04FCF6D"
            },
            "Type": "forward"
          }
        ],
        "LoadBalancerArn": {
          "Ref": "LB8A12904C"
        },
        "Port": 80,
        "Protocol": "HTTP"
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/LB/Listener/Resource"
      }
    },
    "LBListenerTargetGroupF04FCF6D": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Port": 80,
        "Protocol": "HTTP",
        "TargetType": "instance",
        "VpcId": {
          "Ref": "DemoVPC2409DB3F"
        }
      },
      "Metadata": {
        "aws:cdk:path": "LoadBalancerStack/LB/Listener/TargetGroup/Resource"
      }
    }
  },
  "Parameters": {
    "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2"
    }
  },
  "Outputs": {
    "LoadBalancer": {
      "Value": {
        "Fn::GetAtt": [
          "LB8A12904C",
          "DNSName"
        ]
      },
      "Export": {
        "Name": "LoadBalancer"
      }
    }
  }
}