{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "LoadBalancerStack": {
        "id": "LoadBalancerStack",
        "path": "LoadBalancerStack",
        "children": {
          "DemoVPC": {
            "id": "DemoVPC",
            "path": "LoadBalancerStack/DemoVPC",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "LoadBalancerStack/DemoVPC/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPC",
                  "aws:cdk:cloudformation:props": {
                    "cidrBlock": "10.0.0.0/16",
                    "enableDnsHostnames": true,
                    "enableDnsSupport": true,
                    "instanceTenancy": "default",
                    "tags": [
                      {
                        "key": "Name",
                        "value": "LoadBalancerStack/DemoVPC"
                      }
                    ]
                  }
                }
              },
              "PublicSubnet1": {
                "id": "PublicSubnet1",
                "path": "LoadBalancerStack/DemoVPC/PublicSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "LoadBalancerStack/DemoVPC/PublicSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.0.0/18",
                        "vpcId": {
                          "Ref": "DemoVPC2409DB3F"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "LoadBalancerStack/DemoVPC/PublicSubnet1"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "LoadBalancerStack/DemoVPC/PublicSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "LoadBalancerStack/DemoVPC/PublicSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "DemoVPC2409DB3F"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "LoadBalancerStack/DemoVPC/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "LoadBalancerStack/DemoVPC/PublicSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "DemoVPCPublicSubnet1RouteTable833A1DC8"
                        },
                        "subnetId": {
                          "Ref": "DemoVPCPublicSubnet1SubnetB6592B34"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "LoadBalancerStack/DemoVPC/PublicSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "DemoVPCPublicSubnet1RouteTable833A1DC8"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "DemoVPCIGWD7695CC8"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "LoadBalancerStack/DemoVPC/PublicSubnet1/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "LoadBalancerStack/DemoVPC/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "LoadBalancerStack/DemoVPC/PublicSubnet1/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "DemoVPCPublicSubnet1EIPFF4AD3A2",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "DemoVPCPublicSubnet1SubnetB6592B34"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "LoadBalancerStack/DemoVPC/PublicSubnet1"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PublicSubnet2": {
                "id": "PublicSubnet2",
                "path": "LoadBalancerStack/DemoVPC/PublicSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "LoadBalancerStack/DemoVPC/PublicSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.64.0/18",
                        "vpcId": {
                          "Ref": "DemoVPC2409DB3F"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": true,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "LoadBalancerStack/DemoVPC/PublicSubnet2"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Public"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Public"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "LoadBalancerStack/DemoVPC/PublicSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "LoadBalancerStack/DemoVPC/PublicSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "DemoVPC2409DB3F"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "LoadBalancerStack/DemoVPC/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "LoadBalancerStack/DemoVPC/PublicSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "DemoVPCPublicSubnet2RouteTableA55BFCCD"
                        },
                        "subnetId": {
                          "Ref": "DemoVPCPublicSubnet2Subnet980625E0"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "LoadBalancerStack/DemoVPC/PublicSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "DemoVPCPublicSubnet2RouteTableA55BFCCD"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "gatewayId": {
                          "Ref": "DemoVPCIGWD7695CC8"
                        }
                      }
                    }
                  },
                  "EIP": {
                    "id": "EIP",
                    "path": "LoadBalancerStack/DemoVPC/PublicSubnet2/EIP",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::EIP",
                      "aws:cdk:cloudformation:props": {
                        "domain": "vpc",
                        "tags": [
                          {
                            "key": "Name",
                            "value": "LoadBalancerStack/DemoVPC/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "NATGateway": {
                    "id": "NATGateway",
                    "path": "LoadBalancerStack/DemoVPC/PublicSubnet2/NATGateway",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::NatGateway",
                      "aws:cdk:cloudformation:props": {
                        "allocationId": {
                          "Fn::GetAtt": [
                            "DemoVPCPublicSubnet2EIP03E095AC",
                            "AllocationId"
                          ]
                        },
                        "subnetId": {
                          "Ref": "DemoVPCPublicSubnet2Subnet980625E0"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "LoadBalancerStack/DemoVPC/PublicSubnet2"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "PrivateSubnet1": {
                "id": "PrivateSubnet1",
                "path": "LoadBalancerStack/DemoVPC/PrivateSubnet1",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "LoadBalancerStack/DemoVPC/PrivateSubnet1/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.128.0/18",
                        "vpcId": {
                          "Ref": "DemoVPC2409DB3F"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            0,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "LoadBalancerStack/DemoVPC/PrivateSubnet1"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "LoadBalancerStack/DemoVPC/PrivateSubnet1/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "LoadBalancerStack/DemoVPC/PrivateSubnet1/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "DemoVPC2409DB3F"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "LoadBalancerStack/DemoVPC/PrivateSubnet1"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "LoadBalancerStack/DemoVPC/PrivateSubnet1/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "DemoVPCPrivateSubnet1RouteTable12D271CE"
                        },
                        "subnetId": {
                          "Ref": "DemoVPCPrivateSubnet1Subnet577398CC"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "LoadBalancerStack/DemoVPC/PrivateSubnet1/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "DemoVPCPrivateSubnet1RouteTable12D271CE"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "DemoVPCPublicSubnet1NATGateway301A7B38"
                        }
                      }
                    }
                  }
                }
              },
              "PrivateSubnet2": {
                "id": "PrivateSubnet2",
                "path": "LoadBalancerStack/DemoVPC/PrivateSubnet2",
                "children": {
                  "Subnet": {
                    "id": "Subnet",
                    "path": "LoadBalancerStack/DemoVPC/PrivateSubnet2/Subnet",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Subnet",
                      "aws:cdk:cloudformation:props": {
                        "cidrBlock": "10.0.192.0/18",
                        "vpcId": {
                          "Ref": "DemoVPC2409DB3F"
                        },
                        "availabilityZone": {
                          "Fn::Select": [
                            1,
                            {
                              "Fn::GetAZs": ""
                            }
                          ]
                        },
                        "mapPublicIpOnLaunch": false,
                        "tags": [
                          {
                            "key": "Name",
                            "value": "LoadBalancerStack/DemoVPC/PrivateSubnet2"
                          },
                          {
                            "key": "aws-cdk:subnet-name",
                            "value": "Private"
                          },
                          {
                            "key": "aws-cdk:subnet-type",
                            "value": "Private"
                          }
                        ]
                      }
                    }
                  },
                  "Acl": {
                    "id": "Acl",
                    "path": "LoadBalancerStack/DemoVPC/PrivateSubnet2/Acl"
                  },
                  "RouteTable": {
                    "id": "RouteTable",
                    "path": "LoadBalancerStack/DemoVPC/PrivateSubnet2/RouteTable",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::RouteTable",
                      "aws:cdk:cloudformation:props": {
                        "vpcId": {
                          "Ref": "DemoVPC2409DB3F"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "LoadBalancerStack/DemoVPC/PrivateSubnet2"
                          }
                        ]
                      }
                    }
                  },
                  "RouteTableAssociation": {
                    "id": "RouteTableAssociation",
                    "path": "LoadBalancerStack/DemoVPC/PrivateSubnet2/RouteTableAssociation",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SubnetRouteTableAssociation",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "DemoVPCPrivateSubnet2RouteTable700990FB"
                        },
                        "subnetId": {
                          "Ref": "DemoVPCPrivateSubnet2SubnetBF71F3B1"
                        }
                      }
                    }
                  },
                  "DefaultRoute": {
                    "id": "DefaultRoute",
                    "path": "LoadBalancerStack/DemoVPC/PrivateSubnet2/DefaultRoute",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::Route",
                      "aws:cdk:cloudformation:props": {
                        "routeTableId": {
                          "Ref": "DemoVPCPrivateSubnet2RouteTable700990FB"
                        },
                        "destinationCidrBlock": "0.0.0.0/0",
                        "natGatewayId": {
                          "Ref": "DemoVPCPublicSubnet2NATGatewayA2C150AC"
                        }
                      }
                    }
                  }
                }
              },
              "IGW": {
                "id": "IGW",
                "path": "LoadBalancerStack/DemoVPC/IGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::InternetGateway",
                  "aws:cdk:cloudformation:props": {
                    "tags": [
                      {
                        "key": "Name",
                        "value": "LoadBalancerStack/DemoVPC"
                      }
                    ]
                  }
                }
              },
              "VPCGW": {
                "id": "VPCGW",
                "path": "LoadBalancerStack/DemoVPC/VPCGW",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::EC2::VPCGatewayAttachment",
                  "aws:cdk:cloudformation:props": {
                    "vpcId": {
                      "Ref": "DemoVPC2409DB3F"
                    },
                    "internetGatewayId": {
                      "Ref": "DemoVPCIGWD7695CC8"
                    }
                  }
                }
              }
            }
          },
          "ASG-Blue": {
            "id": "ASG-Blue",
            "path": "LoadBalancerStack/ASG-Blue",
            "children": {
              "InstanceSecurityGroup": {
                "id": "InstanceSecurityGroup",
                "path": "LoadBalancerStack/ASG-Blue/InstanceSecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "LoadBalancerStack/ASG-Blue/InstanceSecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "LoadBalancerStack/ASG-Blue/InstanceSecurityGroup",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "tags": [
                          {
                            "key": "Name",
                            "value": "LoadBalancerStack/ASG-Blue"
                          }
                        ],
                        "vpcId": {
                          "Ref": "DemoVPC2409DB3F"
                        }
                      }
                    }
                  },
                  "from LoadBalancerStackLBSecurityGroupB71A4BA8:80": {
                    "id": "from LoadBalancerStackLBSecurityGroupB71A4BA8:80",
                    "path": "LoadBalancerStack/ASG-Blue/InstanceSecurityGroup/from LoadBalancerStackLBSecurityGroupB71A4BA8:80",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                      "aws:cdk:cloudformation:props": {
                        "ipProtocol": "tcp",
                        "description": "Load balancer to target",
                        "fromPort": 80,
                        "groupId": {
                          "Fn::GetAtt": [
                            "ASGBlueInstanceSecurityGroup69CAB15D",
                            "GroupId"
                          ]
                        },
                        "sourceSecurityGroupId": {
                          "Fn::GetAtt": [
                            "LBSecurityGroup8A41EA2B",
                            "GroupId"
                          ]
                        },
                        "toPort": 80
                      }
                    }
                  }
                }
              },
              "InstanceRole": {
                "id": "InstanceRole",
                "path": "LoadBalancerStack/ASG-Blue/InstanceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "LoadBalancerStack/ASG-Blue/InstanceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "ec2.",
                                      {
                                        "Ref": "AWS::URLSuffix"
                                      }
                                    ]
                                  ]
                                }
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "LoadBalancerStack/ASG-Blue"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "InstanceProfile": {
                "id": "InstanceProfile",
                "path": "LoadBalancerStack/ASG-Blue/InstanceProfile",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                  "aws:cdk:cloudformation:props": {
                    "roles": [
                      {
                        "Ref": "ASGBlueInstanceRoleE148582E"
                      }
                    ]
                  }
                }
              },
              "LaunchConfig": {
                "id": "LaunchConfig",
                "path": "LoadBalancerStack/ASG-Blue/LaunchConfig",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AutoScaling::LaunchConfiguration",
                  "aws:cdk:cloudformation:props": {
                    "imageId": {
                      "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
                    },
                    "instanceType": "t2.micro",
                    "iamInstanceProfile": {
                      "Ref": "ASGBlueInstanceProfile1AD78044"
                    },
                    "securityGroups": [
                      {
                        "Fn::GetAtt": [
                          "ASGBlueInstanceSecurityGroup69CAB15D",
                          "GroupId"
                        ]
                      }
                    ],
                    "userData": {
                      "Fn::Base64": "#!/bin/bash\n#!/bin/sh\n\n#install httpd\nyum install httpd -y\n\n#enable and start httpd\nsystemctl enable httpd\nsystemctl start httpd\n\n/bin/cat >index.html <<EOL\n<html>\n    <body bgcolor=\"blue\">\n        <div align=\"center\">\n            <h1>Welcome to AWS!</h1>\n            <h4>Hostname: $(hostname -f)</h4>\n        </div>\n    </body>\n</html>\nEOL"
                    }
                  }
                }
              },
              "ASG": {
                "id": "ASG",
                "path": "LoadBalancerStack/ASG-Blue/ASG",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AutoScaling::AutoScalingGroup",
                  "aws:cdk:cloudformation:props": {
                    "maxSize": "1",
                    "minSize": "1",
                    "launchConfigurationName": {
                      "Ref": "ASGBlueLaunchConfig9A9C72A3"
                    },
                    "tags": [
                      {
                        "key": "Name",
                        "value": "LoadBalancerStack/ASG-Blue",
                        "propagateAtLaunch": true
                      }
                    ],
                    "targetGroupArns": [
                      {
                        "Ref": "LBListenerTargetGroupF04FCF6D"
                      }
                    ],
                    "vpcZoneIdentifier": [
                      {
                        "Ref": "DemoVPCPrivateSubnet1Subnet577398CC"
                      },
                      {
                        "Ref": "DemoVPCPrivateSubnet2SubnetBF71F3B1"
                      }
                    ]
                  }
                }
              },
              "ScalingPolicyAModestLoad": {
                "id": "ScalingPolicyAModestLoad",
                "path": "LoadBalancerStack/ASG-Blue/ScalingPolicyAModestLoad",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "LoadBalancerStack/ASG-Blue/ScalingPolicyAModestLoad/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::AutoScaling::ScalingPolicy",
                      "aws:cdk:cloudformation:props": {
                        "autoScalingGroupName": {
                          "Ref": "ASGBlueASG5B13DC1A"
                        },
                        "policyType": "TargetTrackingScaling",
                        "targetTrackingConfiguration": {
                          "predefinedMetricSpecification": {
                            "predefinedMetricType": "ALBRequestCountPerTarget",
                            "resourceLabel": {
                              "Fn::Join": [
                                "",
                                [
                                  {
                                    "Fn::Select": [
                                      1,
                                      {
                                        "Fn::Split": [
                                          "/",
                                          {
                                            "Ref": "LBListener49E825B4"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "/",
                                  {
                                    "Fn::Select": [
                                      2,
                                      {
                                        "Fn::Split": [
                                          "/",
                                          {
                                            "Ref": "LBListener49E825B4"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "/",
                                  {
                                    "Fn::Select": [
                                      3,
                                      {
                                        "Fn::Split": [
                                          "/",
                                          {
                                            "Ref": "LBListener49E825B4"
                                          }
                                        ]
                                      }
                                    ]
                                  },
                                  "/",
                                  {
                                    "Fn::GetAtt": [
                                      "LBListenerTargetGroupF04FCF6D",
                                      "TargetGroupFullName"
                                    ]
                                  }
                                ]
                              ]
                            }
                          },
                          "targetValue": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter": {
            "id": "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter",
            "path": "LoadBalancerStack/SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118.Parameter"
          },
          "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118": {
            "id": "SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118",
            "path": "LoadBalancerStack/SsmParameterValue:--aws--service--ami-amazon-linux-latest--amzn2-ami-hvm-x86_64-gp2:C96584B6-F00A-464E-AD19-53AFF4B05118"
          },
          "ASG-Green": {
            "id": "ASG-Green",
            "path": "LoadBalancerStack/ASG-Green",
            "children": {
              "InstanceSecurityGroup": {
                "id": "InstanceSecurityGroup",
                "path": "LoadBalancerStack/ASG-Green/InstanceSecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "LoadBalancerStack/ASG-Green/InstanceSecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "LoadBalancerStack/ASG-Green/InstanceSecurityGroup",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "tags": [
                          {
                            "key": "Name",
                            "value": "LoadBalancerStack/ASG-Green"
                          }
                        ],
                        "vpcId": {
                          "Ref": "DemoVPC2409DB3F"
                        }
                      }
                    }
                  }
                }
              },
              "InstanceRole": {
                "id": "InstanceRole",
                "path": "LoadBalancerStack/ASG-Green/InstanceRole",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "LoadBalancerStack/ASG-Green/InstanceRole/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                      "aws:cdk:cloudformation:props": {
                        "assumeRolePolicyDocument": {
                          "Statement": [
                            {
                              "Action": "sts:AssumeRole",
                              "Effect": "Allow",
                              "Principal": {
                                "Service": {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "ec2.",
                                      {
                                        "Ref": "AWS::URLSuffix"
                                      }
                                    ]
                                  ]
                                }
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        },
                        "tags": [
                          {
                            "key": "Name",
                            "value": "LoadBalancerStack/ASG-Green"
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "InstanceProfile": {
                "id": "InstanceProfile",
                "path": "LoadBalancerStack/ASG-Green/InstanceProfile",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                  "aws:cdk:cloudformation:props": {
                    "roles": [
                      {
                        "Ref": "ASGGreenInstanceRoleB9A77BE1"
                      }
                    ]
                  }
                }
              },
              "LaunchConfig": {
                "id": "LaunchConfig",
                "path": "LoadBalancerStack/ASG-Green/LaunchConfig",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AutoScaling::LaunchConfiguration",
                  "aws:cdk:cloudformation:props": {
                    "imageId": {
                      "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amihvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
                    },
                    "instanceType": "t2.micro",
                    "iamInstanceProfile": {
                      "Ref": "ASGGreenInstanceProfile0DE96C54"
                    },
                    "securityGroups": [
                      {
                        "Fn::GetAtt": [
                          "ASGGreenInstanceSecurityGroup652485A8",
                          "GroupId"
                        ]
                      }
                    ],
                    "userData": {
                      "Fn::Base64": "#!/bin/bash\n#!/bin/sh\n\n#install httpd\nyum install httpd -y\n\n#enable and start httpd\nsystemctl enable httpd\nsystemctl start httpd\n\n/bin/cat >index.html <<EOL\n<html>\n    <body bgcolor=\"green\">\n        <div align=\"center\">\n            <h1>Welcome to AWS!</h1>\n            <h4>Hostname: $(hostname -f)</h4>\n        </div>\n    </body>\n</html>\nEOL"
                    }
                  }
                }
              },
              "ASG": {
                "id": "ASG",
                "path": "LoadBalancerStack/ASG-Green/ASG",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AutoScaling::AutoScalingGroup",
                  "aws:cdk:cloudformation:props": {
                    "maxSize": "1",
                    "minSize": "1",
                    "launchConfigurationName": {
                      "Ref": "ASGGreenLaunchConfig46323EE1"
                    },
                    "tags": [
                      {
                        "key": "Name",
                        "value": "LoadBalancerStack/ASG-Green",
                        "propagateAtLaunch": true
                      }
                    ],
                    "vpcZoneIdentifier": [
                      {
                        "Ref": "DemoVPCPrivateSubnet1Subnet577398CC"
                      },
                      {
                        "Ref": "DemoVPCPrivateSubnet2SubnetBF71F3B1"
                      }
                    ]
                  }
                }
              }
            }
          },
          "LB": {
            "id": "LB",
            "path": "LoadBalancerStack/LB",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "LoadBalancerStack/LB/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                  "aws:cdk:cloudformation:props": {
                    "scheme": "internet-facing",
                    "securityGroups": [
                      {
                        "Fn::GetAtt": [
                          "LBSecurityGroup8A41EA2B",
                          "GroupId"
                        ]
                      }
                    ],
                    "subnets": [
                      {
                        "Ref": "DemoVPCPublicSubnet1SubnetB6592B34"
                      },
                      {
                        "Ref": "DemoVPCPublicSubnet2Subnet980625E0"
                      }
                    ],
                    "type": "application"
                  }
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "LoadBalancerStack/LB/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "LoadBalancerStack/LB/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "Automatically created Security Group for ELB LoadBalancerStackLBBC778B9A",
                        "securityGroupIngress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "ipProtocol": "tcp",
                            "fromPort": 80,
                            "toPort": 80,
                            "description": "Allow from anyone on port 80"
                          }
                        ],
                        "vpcId": {
                          "Ref": "DemoVPC2409DB3F"
                        }
                      }
                    }
                  },
                  "to LoadBalancerStackASGBlueInstanceSecurityGroupA7D8941D:80": {
                    "id": "to LoadBalancerStackASGBlueInstanceSecurityGroupA7D8941D:80",
                    "path": "LoadBalancerStack/LB/SecurityGroup/to LoadBalancerStackASGBlueInstanceSecurityGroupA7D8941D:80",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupEgress",
                      "aws:cdk:cloudformation:props": {
                        "groupId": {
                          "Fn::GetAtt": [
                            "LBSecurityGroup8A41EA2B",
                            "GroupId"
                          ]
                        },
                        "ipProtocol": "tcp",
                        "description": "Load balancer to target",
                        "destinationSecurityGroupId": {
                          "Fn::GetAtt": [
                            "ASGBlueInstanceSecurityGroup69CAB15D",
                            "GroupId"
                          ]
                        },
                        "fromPort": 80,
                        "toPort": 80
                      }
                    }
                  }
                }
              },
              "Listener": {
                "id": "Listener",
                "path": "LoadBalancerStack/LB/Listener",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "LoadBalancerStack/LB/Listener/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                      "aws:cdk:cloudformation:props": {
                        "defaultActions": [
                          {
                            "targetGroupArn": {
                              "Ref": "LBListenerTargetGroupF04FCF6D"
                            },
                            "type": "forward"
                          }
                        ],
                        "loadBalancerArn": {
                          "Ref": "LB8A12904C"
                        },
                        "port": 80,
                        "protocol": "HTTP"
                      }
                    }
                  },
                  "TargetGroup": {
                    "id": "TargetGroup",
                    "path": "LoadBalancerStack/LB/Listener/TargetGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "LoadBalancerStack/LB/Listener/TargetGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                          "aws:cdk:cloudformation:props": {
                            "port": 80,
                            "protocol": "HTTP",
                            "targetType": "instance",
                            "vpcId": {
                              "Ref": "DemoVPC2409DB3F"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "LoadBalancer": {
            "id": "LoadBalancer",
            "path": "LoadBalancerStack/LoadBalancer"
          }
        }
      }
    }
  }
}